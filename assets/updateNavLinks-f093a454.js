(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function r(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=r(e);fetch(e.href,n)}})();const a=document.querySelector(".nav"),i=document.querySelector(".burger-menu"),u=document.querySelector(".header--container"),d=()=>{const t=i.getAttribute("aria-expanded")==="true";i.setAttribute("aria-expanded",!t),a.classList.toggle("is-open"),u.classList.toggle("is-open"),i.classList.toggle("is-open"),i.blur(),document.body.classList.toggle("no-scroll")},f=t=>{const s=window.innerWidth<=1220||document.body.clientWidth<=1220;t.target.classList.contains("nav__link")&&s&&d()},v=()=>{i.addEventListener("click",d),a.addEventListener("click",f),window.matchMedia("(max-width: 1220px)").addEventListener("change",t=>{t.matches||(i.setAttribute("aria-expanded",!1),a.classList.remove("is-open"),u.classList.remove("is-open"),i.classList.remove("is-open"),document.body.classList.remove("no-scroll"))})},l=document.querySelectorAll(".nav__link"),g=(t,s)=>{t.forEach(r=>{const o=r.target.getAttribute("id"),e=document.querySelector(`.nav__link[href="#${o}"]`);r.isIntersecting&&(s.forEach(n=>n.classList.remove("active")),e.classList.add("active"))})},p=(t,s)=>new IntersectionObserver(t,s),h=(t,s)=>{s.forEach(r=>{const o=r.getAttribute("href").substring(1),e=document.getElementById(o);e&&t.observe(e)})},b=(t={})=>{const r={...{rootMargin:"-50% 0px -50% 0px",threshold:0},...t},o=p(e=>g(e,l),r);h(o,l)},m=document.querySelectorAll(".nav__link"),L=()=>{m.forEach(t=>{const s=t.getAttribute("href");s.startsWith("#")&&t.setAttribute("href","./"+s)})};export{v as h,b as i,L as u};
//# sourceMappingURL=updateNavLinks-f093a454.js.map
